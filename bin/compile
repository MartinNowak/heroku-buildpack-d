#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -ueo pipefail

BUILD_DIR="$1"
CACHE_DIR="$2"

compiler=dmd
if [ -f "$BUILD_DIR/.d-compiler" ]; then
    compiler=$(cat "$BUILD_DIR/.d-compiler")
fi

os=linux

indent() { sed 's|^|       |'; }

CURL_USER_AGENT="Heroku Buildpack D $(curl --version | head -n 1)"
curl() { command curl -fsSL --retry 3 -A "${CURL_USER_AGENT}" "$@"; }

echo "-----> Using $compiler"
activate_path="$(curl -fsS https://dlang.org/install.sh | SHELL=bash bash -s $compiler --path "$CACHE_DIR" --activate)"
set +u
source "$activate_path"
set -u

if [ ! -d "$HOME/.dub" ]; then
    mkdir -p "$CACHE_DIR/dub_cache"
    ln -sf "$CACHE_DIR/dub_cache" "$HOME/.dub"
fi

# use ld.gold
if [ ! -d "$CACHE_DIR/linker" ]; then
    mkdir -p "$CACHE_DIR/linker"
    ln -sf /usr/bin/ld.gold "$CACHE_DIR/linker/ld"
fi
export PATH="$CACHE_DIR/linker:$PATH"

cd "$BUILD_DIR"
echo "-----> Building application with dub"

dub build -b release --compiler=$DC 2>&1 | indent
dub clean

if [ ! -f Procfile ]; then
    echo "-----> Generating default Procfile"
    path=$(dub describe --data=target-path --data-list)
    path=${path#"$BUILD_DIR"}
    bin=$(dub describe --data=target-name --data-list)
    echo "web: .$path$bin --port \$PORT" | indent
    cat > Procfile <<-EOF
    default_process_types:
      web: .$path$bin --port \$PORT
EOF
fi
