#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -ueo pipefail

BUILD_DIR="$1"
CACHE_DIR="$2"
ENV_DIR="$3"

DC=dmd
if [ -f "$BUILD_DIR/.d-compiler" ]; then
    DC=$(cat "$BUILD_DIR/.d-compiler")
fi

# https://devcenter.heroku.com/articles/buildpack-api#bin-compile
export_env_dir() {
    env_dir=$1
    if [ ! -d "$env_dir" ]; then
        return;
    fi
    shopt -s nullglob
    for env_file in "$env_dir"/*; do
        # http://mywiki.wooledge.org/BashPitfalls#line-60
        [ -e "$env_file" ] || continue
        var="$(basename "$env_file")"
        export "$var=$(cat "$env_file")"
    done
    shopt -u nullglob
}

export_env_dir "$ENV_DIR"

indent() { sed 's|^|       |'; }

CURL_USER_AGENT="Heroku Buildpack D $(curl --version | head -n 1)"
curl() { command curl -fsSL --retry 3 -A "${CURL_USER_AGENT}" "$@"; }

activate_path="$(curl -fsS https://dlang.org/install.sh | SHELL=bash bash -s "$DC" --path "$CACHE_DIR" --activate)"
set +u
# shellcheck source=/dev/null
source "$activate_path"
set -u
echo "-----> Using $DC"
$DC --version | indent
echo '-----> Using dub'
dub --version | indent

if [ ! -d "$HOME/.dub" ]; then
    mkdir -p "$CACHE_DIR/dub_cache"
    ln -sf "$CACHE_DIR/dub_cache" "$HOME/.dub"
fi

# prefer ld.gold
if [ ! -d "$CACHE_DIR/linker" ]; then
    mkdir -p "$CACHE_DIR/linker"
    ln -sf /usr/bin/ld.gold "$CACHE_DIR/linker/ld"
fi
export PATH="$CACHE_DIR/linker:$PATH"
if [[ $DC = dmd* ]]; then
    echo '-----> Using cc'
    ${CC:-cc} -v 2>&1 | indent
fi
echo '-----> Using ld'
${LD:-ld} -v | indent

cd "$BUILD_DIR"
echo "-----> Building application with dub"

dub build -b release --compiler="$DC" 2>&1 | indent
dub clean

if [ ! -f Procfile ]; then
    echo "-----> Generating default Procfile"
    path=$(dub describe --data=target-path --data-list)
    path=${path#"$BUILD_DIR"}
    bin=$(dub describe --data=target-name --data-list)
    echo "web: .$path$bin --port \$PORT" | indent
    cat > Procfile <<-EOF
    default_process_types:
      web: .$path$bin --port \$PORT
EOF
fi
